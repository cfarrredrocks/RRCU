--==================================================================================================
--Author: Farr, C
--Create Date:	2024-03-05  	
--Object Name:	sp_LOAD_T_ACCOUNT_STG
--Description:  Loading ACCOUNT Data
--***********************************************************************************************************************
--Date			Trello#					ChangedBy						Description 
------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE RRCU_STG_DEV.KEYSTONE_CORE.sp_LOAD_T_ACCOUNT_STG ()
RETURNS VARCHAR NOT NULL
LANGUAGE SQL

AS
$$

BEGIN 
	
	TRUNCATE TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF;
	
	-- REMOVE PK	
	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF DROP PRIMARY KEY;
	
	-- Populate STAGING WITH CTE DATA
	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF
	(
	SERIAL, 
	SOURCEHASH2,
	STORED_ACCESS_KEY,
	LAST_FM_DATE,
	ACCOUNT_NUMBER,
	ACCOUNT_TITLE,
	PRIMARY_PERSON_SERIAL, 
	OPEN_DATE, 
	OPENED_BY_USER_SERIAL, 
	CLOSE_DATE, 
	CLOSE_REASON_SERIAL, 
	CORRESPONDENCE_DATE, 
	TYPE_SERIAL, 
	MAIL_PERSON_ADDR_LINK_SERIAL, 
	E_NOTICE_OPTION, 
	E_STMT_OPTION, 
	E_STMT_NOTIFICATION, 
	E_STMT_PERSON_CONTACT_SERIAL, 
	STMT_CUTOFF_CYCLE_SERIAL, 
	STMT_CUTOFF_CYCLE_OPTION, 
	RELATIONSHIP_SERIAL, 
	RELATIONSHIP_OVR_SERIAL, 
	RELATIONSHIP_OVR_EFF_DATE, 
	RELATIONSHIP_OVR_EXP_DATE, 
	ELIGIBILITY_SERIAL, 
	SHARED_BRANCH_OPTION, 
	BILL_PAYMENT_OPTION, 
	ACCESS_RESTRICTION, 
	NOTE_RESTRICTION, 
	DELINQUENCY_RESTRICTION, 
	DELINQUENCY_R_EXEMPT_EXP_DATE, 
	NEW_ACT_ALERT_EXPIRATION_DATE, 
	CK_HLD_NEW_ACT_EXPIRATION_DATE, 
	CK_HLD_REP_OVR_EXPIRATION_DATE, 
	CK_HLD_SPC_CSE_OPTION, 
	CK_HLD_SPC_CSE_REASON, 
	CK_HLD_SPC_CSE_EXPIRATION_DATE, 
	ROW_CHANGE_TIMESTAMP, 
	CHECK_HOLD_LEVEL_SERIAL, 
	DORMANCY_RESTRICTION
	)
	
	WITH CTE AS

	(	
	SELECT 
	SERIAL, -- NATURAL KEY
	MD5(TO_VARCHAR(ARRAY_CONSTRUCT(*))) AS SourceHash2,  -- SOURCE HASH	
	STORED_ACCESS_KEY,
	LAST_FM_DATE,
	ACCOUNT_NUMBER, 
	ACCOUNT_TITLE, 
	PRIMARY_PERSON_SERIAL, 
	OPEN_DATE, 
	OPENED_BY_USER_SERIAL, 
	CLOSE_DATE,  -- Business Rule
	CLOSE_REASON_SERIAL, 
	CORRESPONDENCE_DATE, 
	TYPE_SERIAL, 
	MAIL_PERSON_ADDR_LINK_SERIAL, 
	E_NOTICE_OPTION, 
	E_STMT_OPTION, 
	E_STMT_NOTIFICATION, 
	E_STMT_PERSON_CONTACT_SERIAL, 
	STMT_CUTOFF_CYCLE_SERIAL, 
	STMT_CUTOFF_CYCLE_OPTION, 
	RELATIONSHIP_SERIAL, 
	RELATIONSHIP_OVR_SERIAL,
	RELATIONSHIP_OVR_EFF_DATE,
	RELATIONSHIP_OVR_EXP_DATE,
	ELIGIBILITY_SERIAL, 
	SHARED_BRANCH_OPTION, 
	BILL_PAYMENT_OPTION, 
	ACCESS_RESTRICTION, 
	NOTE_RESTRICTION, 
	DELINQUENCY_RESTRICTION, 
	DELINQUENCY_R_EXEMPT_EXP_DATE, 
	NEW_ACT_ALERT_EXPIRATION_DATE, 
	CK_HLD_NEW_ACT_EXPIRATION_DATE, 
	CK_HLD_REP_OVR_EXPIRATION_DATE, 
	CK_HLD_SPC_CSE_OPTION, 
	CK_HLD_SPC_CSE_REASON, 
	CK_HLD_SPC_CSE_EXPIRATION_DATE, 
	ROW_CHANGE_TIMESTAMP, 
	CHECK_HOLD_LEVEL_SERIAL, 
	DORMANCY_RESTRICTION, 
	ROW_NUMBER() OVER (PARTITION BY SERIAL ORDER BY SERIAL) AS rn -- helps identify mutliple serial number dupes		
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG
	)

	SELECT 	SERIAL, SOURCEHASH2,STORED_ACCESS_KEY, LAST_FM_DATE, ACCOUNT_NUMBER, ACCOUNT_TITLE, PRIMARY_PERSON_SERIAL, OPEN_DATE, OPENED_BY_USER_SERIAL, 
	CLOSE_DATE, CLOSE_REASON_SERIAL, CORRESPONDENCE_DATE, TYPE_SERIAL, MAIL_PERSON_ADDR_LINK_SERIAL, E_NOTICE_OPTION, E_STMT_OPTION, E_STMT_NOTIFICATION, 
	E_STMT_PERSON_CONTACT_SERIAL, STMT_CUTOFF_CYCLE_SERIAL, STMT_CUTOFF_CYCLE_OPTION, RELATIONSHIP_SERIAL, RELATIONSHIP_OVR_SERIAL, RELATIONSHIP_OVR_EFF_DATE,
	RELATIONSHIP_OVR_EXP_DATE, ELIGIBILITY_SERIAL, SHARED_BRANCH_OPTION, BILL_PAYMENT_OPTION, ACCESS_RESTRICTION, NOTE_RESTRICTION, DELINQUENCY_RESTRICTION, 
	DELINQUENCY_R_EXEMPT_EXP_DATE, NEW_ACT_ALERT_EXPIRATION_DATE, CK_HLD_NEW_ACT_EXPIRATION_DATE, CK_HLD_REP_OVR_EXPIRATION_DATE, CK_HLD_SPC_CSE_OPTION, 
	CK_HLD_SPC_CSE_REASON, CK_HLD_SPC_CSE_EXPIRATION_DATE, ROW_CHANGE_TIMESTAMP, CHECK_HOLD_LEVEL_SERIAL, DORMANCY_RESTRICTION, 
	FROM CTE
	WHERE rn = 1;

	-- DUPE CHECK / DELETE 
	DELETE FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF USING (
    	WITH CTE_DUP AS
    	(
    	SELECT SERIAL,
	 	ROW_NUMBER () OVER ( PARTITION BY SERIAL ORDER BY SERIAL) AS RN
	 	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF
    	)
        SELECT SERIAL, RN FROM CTE_DUP
        ) AS CTE_RESULT
	WHERE CTE_RESULT.RN > 1;
	
	-- ADD PRIMARY KEY BACK

	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF ADD PRIMARY KEY (SERIAL);

	-- Expiration for Person Business Rules Death_Date ONLY

	UPDATE RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF
	SET ACCT_CURR_IND = 0,
	ACCT_EXP_DT = CURRENT_DATE
	WHERE ACCT_CLOSE_DATE IS NOT NULL
	AND ACCT_EXP_DT IS NULL;	
	
	-- Expiration for records not coming back into resultset
	UPDATE RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF
	SET ACCT_CURR_IND = 0
	, ACCT_EXP_DT = CURRENT_DATE
	WHERE ACCT_CURR_IND = 1
	AND ACCT_SERIAL NOT IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF);

	DROP TABLE IF EXISTS RRCU_STG_DEV.KEYSTONE_CORE.Update_STG;

	CREATE TEMPORARY TABLE RRCU_STG_DEV.KEYSTONE_CORE.Update_STG(
	ACCT_REC_KEY BIGINT,
	STG_SOURCEHASH2 VARCHAR(32),
	NEW_SOURCEHASH2 VARCHAR(32),
	IS_TYPE2 INT,  -- REPRESENTS TYPE 2
	IS_NEW INT -- INDICATION FOR NEW RECORD TYPE 2
	);

	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.Update_STG (
	ACCT_REC_KEY,
	STG_SOURCEHASH2,
	NEW_SOURCEHASH2,
	IS_NEW,
	IS_TYPE2	
	)
	
	WITH CTE_COMPARE AS
	(
	SELECT dim.ACCT_REC_KEY ,  dim.ACCT_SOURCEHASH2, stg.sourcehash2,
	CASE WHEN dim.ACCT_REC_KEY IS NULL THEN 1 ELSE 0 END CASE,
	CASE WHEN dim.ACCT_REC_KEY IS NOT NULL AND stg.SOURCEHASH2 <> dim.ACCT_SOURCEHASH2 THEN 1 ELSE 0 END CASE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF stg
	LEFT OUTER JOIN RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF dim ON dim.ACCT_SERIAL = stg.SERIAL AND dim.ACCT_CURR_IND  = 1
	)
	SELECT *
	FROM CTE_COMPARE;

	--SELECT * FROM RRCU_STG_DEV.KEYSTONE_CORE.Update_STG;

	UPDATE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF a
	SET ACCT_REC_KEY = b.ACCT_REC_KEY,
	ISNEW = b.IS_NEW,
	ISTYPE2 = b.IS_TYPE2
	FROM (SELECT ACCT_REC_KEY, IS_NEW, IS_TYPE2, NEW_SOURCEHASH2 FROM RRCU_STG_DEV.KEYSTONE_CORE.Update_STG) b
	WHERE a.SOURCEHASH2 = b.NEW_SOURCEHASH2 AND a.ACCT_REC_KEY IS NULL;

	--SELECT isnew, count(*)
	--FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF
	--WHERE isnew = 1
	--GROUP BY isnew
	--WHERE SOURCEHASH2 IN (SELECT NEW_SOURCEHASH2 FROM RRCU_STG_DEV.KEYSTONE_CORE.Update_STG);

   -- Expiration for records type 2
	
   UPDATE RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF
	SET ACCT_CURR_IND = 0
	, ACCT_EXP_DT = CURRENT_DATE
	WHERE ACCT_CURR_IND = 1
	AND ACCT_SERIAL IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF WHERE ISTYPE2 = 1); 

	INSERT INTO RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF
	(
	ACCT_SERIAL,
	ACCT_CURR_IND,
	ACCT_EFF_DT,
	ACCT_EXP_DT,
	--ACCT_MOD_DT, 
	ACCT_SOURCEHASH2, 
	ACCT_STORED_ACCESS_KEY, 
	ACCT_LAST_FM_DATE, 
	ACCT_ACCOUNT_NUMBER, 
	ACCT_ACCOUNT_TITLE, 
	ACCT_PRIMARY_PERSON_SERIAL, 
	ACCT_OPEN_DATE, 
	ACCT_OPENED_BY_USER_SERIAL, 
	ACCT_CLOSE_DATE, 
	ACCT_CLOSE_REASON_SERIAL, 
	ACCT_CORRESPONDENCE_DATE, 
	ACCT_TYPE_SERIAL, 
	ACCT_MAIL_PERSON_ADDR_LINK_SERIAL, 
	ACCT_E_NOTICE_OPTION, 
	ACCT_E_STMT_OPTION, 
	ACCT_E_STMT_NOTIFICATION, 
	ACCT_E_STMT_PERSON_CONTACT_SERIAL, 
	ACCT_STMT_CUTOFF_CYCLE_SERIAL, 
	ACCT_STMT_CUTOFF_CYCLE_OPTION, 
	ACCT_RELATIONSHIP_SERIAL, 
	ACCT_RELATIONSHIP_OVR_SERIAL, 
	ACCT_RELATIONSHIP_OVR_EFF_DATE, 
	ACCT_RELATIONSHIP_OVR_EXP_DATE, 
	ACCT_ELIGIBILITY_SERIAL, 
	ACCT_SHARED_BRANCH_OPTION, 
	ACCT_BILL_PAYMENT_OPTION, 
	ACCT_ACCESS_RESTRICTION, 
	ACCT_NOTE_RESTRICTION, 
	ACCT_DELINQUENCY_RESTRICTION, 
	ACCT_DELINQUENCY_R_EXEMPT_EXP_DATE, 
	ACCT_NEW_ACT_ALERT_EXPIRATION_DATE, 
	ACCT_CK_HLD_NEW_ACT_EXPIRATION_DATE, 
	ACCT_CK_HLD_REP_OVR_EXPIRATION_DATE, 
	ACCT_CK_HLD_SPC_CSE_OPTION, 
	ACCT_CK_HLD_SPC_CSE_REASON, 
	ACCT_CK_HLD_SPC_CSE_EXPIRATION_DATE, 
	ACCT_ROW_CHANGE_TIMESTAMP, 
	ACCT_CHECK_HOLD_LEVEL_SERIAL, 
	ACCT_DORMANCY_RESTRICTION, 
	DW_LOAD_DT
	)
	
	SELECT 
	stg.SERIAL,
	1,
	CURRENT_DATE,
	NULL,
	stg.SOURCEHASH2,
	stg.STORED_ACCESS_KEY,
 	stg.LAST_FM_DATE,
	stg.ACCOUNT_NUMBER, 
	stg.ACCOUNT_TITLE, 
	stg.PRIMARY_PERSON_SERIAL, 
	stg.OPEN_DATE, 
	stg.OPENED_BY_USER_SERIAL, 
	stg.CLOSE_DATE, 
	stg.CLOSE_REASON_SERIAL, 
	stg.CORRESPONDENCE_DATE, 
	stg.TYPE_SERIAL, 
	stg.MAIL_PERSON_ADDR_LINK_SERIAL, 
	stg.E_NOTICE_OPTION, 
	stg.E_STMT_OPTION, 
	stg.E_STMT_NOTIFICATION, 
	stg.E_STMT_PERSON_CONTACT_SERIAL, 
	stg.STMT_CUTOFF_CYCLE_SERIAL, 
	stg.STMT_CUTOFF_CYCLE_OPTION, 
	stg.RELATIONSHIP_SERIAL, 
	stg.RELATIONSHIP_OVR_SERIAL, 
	stg.RELATIONSHIP_OVR_EFF_DATE, 
	stg.RELATIONSHIP_OVR_EXP_DATE, 
	stg.ELIGIBILITY_SERIAL, 
	stg.SHARED_BRANCH_OPTION, 
	stg.BILL_PAYMENT_OPTION, 
	stg.ACCESS_RESTRICTION, 
	stg.NOTE_RESTRICTION, 
	stg.DELINQUENCY_RESTRICTION, 
	stg.DELINQUENCY_R_EXEMPT_EXP_DATE, 
	stg.NEW_ACT_ALERT_EXPIRATION_DATE, 
	stg.CK_HLD_NEW_ACT_EXPIRATION_DATE, 
	stg.CK_HLD_REP_OVR_EXPIRATION_DATE, 
	stg.CK_HLD_SPC_CSE_OPTION, 
	stg.CK_HLD_SPC_CSE_REASON, 
	stg.CK_HLD_SPC_CSE_EXPIRATION_DATE, 
	stg.ROW_CHANGE_TIMESTAMP, 
	stg.CHECK_HOLD_LEVEL_SERIAL, 
	stg.DORMANCY_RESTRICTION,
	CURRENT_DATE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_ACCOUNT_STG_CF stg
		WHERE ISNEW = 1 OR ISTYPE2 = 1;
	
	-- Business rules around death date for current records
	UPDATE RRCU_DW_DEV.DW.T_KS_ACCOUNT_DW_CF
	SET ACCT_CURR_IND = 0,
	ACCT_EXP_DT = CURRENT_DATE
	WHERE ACCT_CLOSE_DATE IS NOT NULL
	AND ACCT_EXP_DT IS NULL;

END;
$$
;