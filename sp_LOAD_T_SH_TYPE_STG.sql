/*
--==================================================================================================
--Author: Farr, C
--Create Date:	2024-04-02  	
--Object Name:	sp_LOAD_T_SH_TYPE_STG
--Description:  Loading Share Type Data
--***********************************************************************************************************************
--Date			Trello#					ChangedBy						Description 
------------------------------------------------------------------------------------------------------------------------
*/

CREATE OR REPLACE PROCEDURE RRCU_STG_DEV.KEYSTONE_CORE.sp_LOAD_T_SH_TYPE_STG()
RETURNS VARCHAR NOT NULL
LANGUAGE SQL

AS
$$

BEGIN 
	
	TRUNCATE TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF;
	
	-- REMOVE PK	
	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF DROP PRIMARY KEY;

	-- Populate STAGING WITH CTE DATA
	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF
	(
	SERIAL,
	SOURCEHASH2,
	LAST_FM_DATE, 
	DESCRIPTION, 
	STATUS, 
	CODE, 
	CATEGORY, 
	PROCESSING, 
	MINIMUM_BALANCE, 
	MINIMUM_DEPOSIT, 
	MINIMUM_WITHDRAWAL, 
	REG_D_LIMITING, 
	REG_CC_OPTION, 
	CLOSE_OPTION, 
	CLOSE_FEE_SERIAL, 
	DORMANCY_RESTRICTION_DAYS, 
	CERT_BUMP_LIMIT, 
	CERT_BUMP_WAIT_DAYS, 
	COLLECTION_ITEM_TYPE_SERIAL, 
	COLLECTION_NOTICE_TYPE_SERIAL, 
	APP_FORM_PACKET_SERIAL, 
	DEF_LOGIN_WITHDRAWAL_ACCESS, 
	DEF_LOGIN_DEPOSIT_ACCESS, 
	DEF_LOGIN_INQUIRY_ACCESS, 
	BALANCE_GL_SERIAL, 
	BALANCE_GL_BRANCH_ACCTING, 
	CHARGE_OFF_GL_SERIAL, 
	CHARGE_OFF_GL_BRANCH_ACCTING, 
	RECOVERY_GL_SERIAL, 
	RECOVERY_GL_BRANCH_ACCTING, 
	DIVIDEND_GL_SERIAL, 
	DIVIDEND_GL_BRANCH_ACCTING, 
	DIV_PAYABLE_GL_SERIAL, 
	DIV_PAYABLE_GL_BRANCH_ACCTING, 
	CERT_PEN_GL_SERIAL, 
	CERT_PEN_GL_BRANCH_ACCTING, 
	EXT_TRAN_GL_SERIAL, 
	EXT_TRAN_GL_BRANCH_ACCTING, 
	AIRES_CODE
	)
	
	WITH CTE AS

	(	
	SELECT 
	SERIAL,
	MD5(TO_VARCHAR(ARRAY_CONSTRUCT(*))) AS SourceHash2,  -- SOURCE HASH	
	LAST_FM_DATE, 
	DESCRIPTION, 
	STATUS, 
	CODE, 
	CATEGORY, 
	PROCESSING, 
	MINIMUM_BALANCE, 
	MINIMUM_DEPOSIT, 
	MINIMUM_WITHDRAWAL, 
	REG_D_LIMITING, 
	REG_CC_OPTION, 
	CLOSE_OPTION, 
	CLOSE_FEE_SERIAL, 
	DORMANCY_RESTRICTION_DAYS, 
	CERT_BUMP_LIMIT, 
	CERT_BUMP_WAIT_DAYS, 
	COLLECTION_ITEM_TYPE_SERIAL, 
	COLLECTION_NOTICE_TYPE_SERIAL, 
	APP_FORM_PACKET_SERIAL, 
	DEF_LOGIN_WITHDRAWAL_ACCESS, 
	DEF_LOGIN_DEPOSIT_ACCESS, 
	DEF_LOGIN_INQUIRY_ACCESS, 
	BALANCE_GL_SERIAL, 
	BALANCE_GL_BRANCH_ACCTING, 
	CHARGE_OFF_GL_SERIAL, 
	CHARGE_OFF_GL_BRANCH_ACCTING, 
	RECOVERY_GL_SERIAL, 
	RECOVERY_GL_BRANCH_ACCTING, 
	DIVIDEND_GL_SERIAL, 
	DIVIDEND_GL_BRANCH_ACCTING, 
	DIV_PAYABLE_GL_SERIAL, 
	DIV_PAYABLE_GL_BRANCH_ACCTING, 
	CERT_PEN_GL_SERIAL, 
	CERT_PEN_GL_BRANCH_ACCTING, 
	EXT_TRAN_GL_SERIAL, 
	EXT_TRAN_GL_BRANCH_ACCTING,
	AIRES_CODE,
	ROW_NUMBER() OVER (PARTITION BY SERIAL ORDER BY SERIAL) AS rn -- helps identify mutliple serial number dupes		
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG
	)

	SELECT SERIAL, SOURCEHASH2, LAST_FM_DATE, DESCRIPTION, STATUS, CODE, CATEGORY, PROCESSING, MINIMUM_BALANCE, MINIMUM_DEPOSIT, MINIMUM_WITHDRAWAL, REG_D_LIMITING, 
	REG_CC_OPTION, CLOSE_OPTION, CLOSE_FEE_SERIAL, DORMANCY_RESTRICTION_DAYS, CERT_BUMP_LIMIT, CERT_BUMP_WAIT_DAYS, COLLECTION_ITEM_TYPE_SERIAL, COLLECTION_NOTICE_TYPE_SERIAL, 
	APP_FORM_PACKET_SERIAL, DEF_LOGIN_WITHDRAWAL_ACCESS, DEF_LOGIN_DEPOSIT_ACCESS, DEF_LOGIN_INQUIRY_ACCESS, BALANCE_GL_SERIAL, BALANCE_GL_BRANCH_ACCTING, CHARGE_OFF_GL_SERIAL, 
	CHARGE_OFF_GL_BRANCH_ACCTING, RECOVERY_GL_SERIAL, RECOVERY_GL_BRANCH_ACCTING, DIVIDEND_GL_SERIAL, DIVIDEND_GL_BRANCH_ACCTING, DIV_PAYABLE_GL_SERIAL, DIV_PAYABLE_GL_BRANCH_ACCTING, 
	CERT_PEN_GL_SERIAL, CERT_PEN_GL_BRANCH_ACCTING, EXT_TRAN_GL_SERIAL, EXT_TRAN_GL_BRANCH_ACCTING, AIRES_CODE
	FROM CTE
	WHERE rn = 1;

	-- DUPE CHECK / DELETE 
	DELETE FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF USING (
    	WITH CTE_DUP AS
    	(
    	SELECT SERIAL,
	 	ROW_NUMBER () OVER ( PARTITION BY SERIAL ORDER BY SERIAL) AS RN
	 	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF
    	)
        SELECT SERIAL, RN FROM CTE_DUP
        ) AS CTE_RESULT
	WHERE CTE_RESULT.RN > 1;

	-- ADD PRIMARY KEY BACK

	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF ADD PRIMARY KEY (SERIAL);
	
	-- Expiration for records not coming back into resultset
	UPDATE RRCU_DW_DEV.DW.T_KS_SH_TYPE_DW_CF
	SET SHTYP_CURR_IND = 0
	, SHTYP_EXP_DT = CURRENT_DATE
	WHERE SHTYP_CURR_IND = 1
	AND SHTYP_SERIAL NOT IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF);

	DROP TABLE IF EXISTS RRCU_STG_DEV.KEYSTONE_CORE.Update_STG;

	CREATE TEMPORARY TABLE RRCU_STG_DEV.KEYSTONE_CORE.Update_STG(
	SHTYP_REC_KEY BIGINT,
	STG_SOURCEHASH2 VARCHAR(32),
	NEW_SOURCEHASH2 VARCHAR(32),
	IS_TYPE2 INT,  -- REPRESENTS TYPE 2
	IS_NEW INT -- INDICATION FOR NEW RECORD TYPE 2
	);


	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.Update_STG (
	SHTYP_REC_KEY,
	STG_SOURCEHASH2,
	NEW_SOURCEHASH2,
	IS_NEW,
	IS_TYPE2	
	)
	
	WITH CTE_COMPARE AS
	(
	SELECT dim.SHTYP_REC_KEY ,  dim.SHTYP_SOURCEHASH2, stg.sourcehash2,
	CASE WHEN dim.SHTYP_REC_KEY IS NULL THEN 1 ELSE 0 END CASE,
	CASE WHEN dim.SHTYP_REC_KEY IS NOT NULL AND stg.SOURCEHASH2 <> dim.SHTYP_SOURCEHASH2 THEN 1 ELSE 0 END CASE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF stg
	LEFT OUTER JOIN RRCU_DW_DEV.DW.T_KS_SH_TYPE_DW_CF dim ON dim.SHTYP_SERIAL = stg.SERIAL AND dim.SHTYP_CURR_IND  = 1
	)
	SELECT *
	FROM CTE_COMPARE;

	UPDATE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF a
	SET SHTYP_REC_KEY = b.SHTYP_REC_KEY,
	ISNEW = b.IS_NEW,
	ISTYPE2 = b.IS_TYPE2
	FROM (SELECT SHTYP_REC_KEY, IS_NEW, IS_TYPE2, NEW_SOURCEHASH2 FROM RRCU_STG_DEV.KEYSTONE_CORE.Update_STG) b
	WHERE a.SOURCEHASH2 = b.NEW_SOURCEHASH2 AND a.SHTYP_REC_KEY IS NULL;

	-- Expiration for records type 2
	
   UPDATE RRCU_DW_DEV.DW.T_KS_SH_TYPE_DW_CF
	SET SHTYP_CURR_IND = 0
	, SHTYP_EXP_DT = CURRENT_DATE
	WHERE SHTYP_CURR_IND = 1
	AND SHTYP_SERIAL IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF WHERE ISTYPE2 = 1); 

	INSERT INTO RRCU_DW_DEV.DW.T_KS_SH_TYPE_DW_CF
	(
	SHTYP_SERIAL, 
	SHTYP_CURR_IND, 
	SHTYP_EFF_DT, 
	SHTYP_EXP_DT, 
	--SHTYP_MOD_DT, 
	SHTYP_SOURCEHASH2, 
	SHTYP_LAST_FM_DATE, 
	SHTYP_DESCRIPTION, 
	SHTYP_STATUS, 
	SHTYP_CODE, 
	SHTYP_CATEGORY, 
	SHTYP_PROCESSING, 
	SHTYP_MINIMUM_BALANCE, 
	SHTYP_MINIMUM_DEPOSIT, 
	SHTYP_MINIMUM_WITHDRAWAL, 
	SHTYP_REG_D_LIMITING, 
	SHTYP_REG_CC_OPTION, 
	SHTYP_CLOSE_OPTION, 
	SHTYP_CLOSE_FEE_SERIAL, 
	SHTYP_DORMANCY_RESTRICTION_DAYS, 
	SHTYP_CERT_BUMP_LIMIT, 
	SHTYP_CERT_BUMP_WAIT_DAYS, 
	SHTYP_COLLECTION_ITEM_TYPE_SERIAL, 
	SHTYP_COLLECTION_NOTICE_TYPE_SERIAL,
	SHTYP_APP_FORM_PACKET_SERIAL, 
	SHTYP_DEF_LOGIN_WITHDRAWAL_ACCESS, 
	SHTYP_DEF_LOGIN_DEPOSIT_ACCESS, 
	SHTYP_DEF_LOGIN_INQUIRY_ACCESS,
	SHTYP_BALANCE_GL_SERIAL, 
	SHTYP_BALANCE_GL_BRANCH_ACCTING, 
	SHTYP_CHARGE_OFF_GL_SERIAL, 
	SHTYP_CHARGE_OFF_GL_BRANCH_ACCTING, 
	SHTYP_RECOVERY_GL_SERIAL, 
	SHTYP_RECOVERY_GL_BRANCH_ACCTING, 
	SHTYP_DIVIDEND_GL_SERIAL, 
	SHTYP_DIVIDEND_GL_BRANCH_ACCTING, 
	SHTYP_DIV_PAYABLE_GL_SERIAL, 
	SHTYP_DIV_PAYABLE_GL_BRANCH_ACCTING, 
	SHTYP_CERT_PEN_GL_SERIAL, 
	SHTYP_CERT_PEN_GL_BRANCH_ACCTING, 
	SHTYP_EXT_TRAN_GL_SERIAL, 
	SHTYP_EXT_TRAN_GL_BRANCH_ACCTING, 
	SHTYP_AIRES_CODE, 
	DW_LOAD_DT
	)
	
	SELECT 
	stg.SERIAL,
	1,
	CURRENT_DATE,
	NULL,
	stg.SOURCEHASH2,
	stg.LAST_FM_DATE, 
	stg.DESCRIPTION, 
	stg.STATUS, 
	stg.CODE, 
	stg.CATEGORY, 
	stg.PROCESSING, 
	stg.MINIMUM_BALANCE, 
	stg.MINIMUM_DEPOSIT, 
	stg.MINIMUM_WITHDRAWAL, 
	stg.REG_D_LIMITING, 
	stg.REG_CC_OPTION, 
	stg.CLOSE_OPTION, 
	stg.CLOSE_FEE_SERIAL, 
	stg.DORMANCY_RESTRICTION_DAYS, 
	stg.CERT_BUMP_LIMIT, 
	stg.CERT_BUMP_WAIT_DAYS, 
	stg.COLLECTION_ITEM_TYPE_SERIAL, 
	stg.COLLECTION_NOTICE_TYPE_SERIAL, 
	stg.APP_FORM_PACKET_SERIAL, 
	stg.DEF_LOGIN_WITHDRAWAL_ACCESS, 
	stg.DEF_LOGIN_DEPOSIT_ACCESS, 
	stg.DEF_LOGIN_INQUIRY_ACCESS, 
	stg.BALANCE_GL_SERIAL, 
	stg.BALANCE_GL_BRANCH_ACCTING, 
	stg.CHARGE_OFF_GL_SERIAL, 
	stg.CHARGE_OFF_GL_BRANCH_ACCTING, 
	stg.RECOVERY_GL_SERIAL, 
	stg.RECOVERY_GL_BRANCH_ACCTING, 
	stg.DIVIDEND_GL_SERIAL, 
	stg.DIVIDEND_GL_BRANCH_ACCTING, 
	stg.DIV_PAYABLE_GL_SERIAL, 
	stg.DIV_PAYABLE_GL_BRANCH_ACCTING, 
	stg.CERT_PEN_GL_SERIAL, 
	stg.CERT_PEN_GL_BRANCH_ACCTING, 
	stg.EXT_TRAN_GL_SERIAL, 
	stg.EXT_TRAN_GL_BRANCH_ACCTING,
	stg.AIRES_CODE,
	CURRENT_DATE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_SH_TYPE_STG_CF stg
		WHERE ISNEW = 1 OR ISTYPE2 = 1;
	
	-- Business rules status for current records
	UPDATE RRCU_DW_DEV.DW.T_KS_SH_TYPE_DW_CF
	SET SHTYP_CURR_IND = 0,
	SHTYP_EXP_DT = CURRENT_DATE
	WHERE SHTYP_STATUS = 'C'
	AND SHTYP_EXP_DT IS NULL;

END;
$$
;

