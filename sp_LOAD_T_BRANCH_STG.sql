/*
--==================================================================================================
--Author: Farr, C
--Create Date:	2024-04-03  	
--Object Name:	sp_LOAD_T_BRANCH_STG
--Description:  Loading Share Data
--***********************************************************************************************************************
--Date			Trello#					ChangedBy						Description 
------------------------------------------------------------------------------------------------------------------------
*/

CREATE OR REPLACE PROCEDURE RRCU_STG_DEV.KEYSTONE_CORE.sp_LOAD_T_BRANCH_STG()
RETURNS VARCHAR NOT NULL
LANGUAGE SQL

AS
$$

BEGIN 
	
	TRUNCATE TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF;
	
	-- REMOVE PK	
	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF DROP PRIMARY KEY;

	-- Populate STAGING WITH CTE DATA
	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF
	(
	SERIAL,
	SOURCEHASH2,
	LAST_FM_DATE, 
	DESCRIPTION, 
	STATUS, 
	CODE, 
	GL_ACCOUNT_BRANCH_SUFFIX, 
	CK_HLD_ROUTING_SET_SERIAL, 
	CK_HLD_BANK_DAY_CUTOFF_HOUR, 
	CK_HLD_BANK_DAY_CUTOFF_MINUTE, 
	TIME_ZONE, 
	PHONE_NUMBER, 
	SHARED_BRANCH_CUSO, 
	SHARED_BRANCH_LEAGUE, 
	SHARED_BRANCH_INSTITUTION_ID, 
	SHARED_BRANCH_PSEUDO_TERMINAL, 
	CHEX_SYSTEMS_CUSTOMER_ID, 
	CHEX_SYSTEMS_BIZ_CHEX_FI_ID, 
	FINCEN_LOCATION_CODE, 
	RSSD_ID, 
	SALES_OPPORTUNITY_OPTION, 
	FIRST_ADDRESS_LINE, 
	PO_BOX, 
	ADDITIONAL_ADDRESS_LINE, 
	STREET, 
	CITY, 
	STATE, 
	POSTAL_CODE, 
	COUNTRY, 
	COUNTRY_CODE, 
	ADDRESS_FORMAT, 
	LATITUDE, 
	LONGITUDE, 
	NMLSR_ID,
	NMLSR_STATE, 
	NMLSR_EFFECTIVE_DATE, 
	NMLSR_EXPIRATION_DATE
	)
	
	WITH CTE AS

	(	
	SELECT 
	SERIAL,
	MD5(TO_VARCHAR(ARRAY_CONSTRUCT(*))) AS SourceHash2,  -- SOURCE HASH	
	LAST_FM_DATE, 
	DESCRIPTION, 
	STATUS, 
	CODE, 
	GL_ACCOUNT_BRANCH_SUFFIX, 
	CK_HLD_ROUTING_SET_SERIAL, 
	CK_HLD_BANK_DAY_CUTOFF_HOUR, 
	CK_HLD_BANK_DAY_CUTOFF_MINUTE, 
	TIME_ZONE, 
	PHONE_NUMBER, 
	SHARED_BRANCH_CUSO, 
	SHARED_BRANCH_LEAGUE, 
	SHARED_BRANCH_INSTITUTION_ID, 
	SHARED_BRANCH_PSEUDO_TERMINAL, 
	CHEX_SYSTEMS_CUSTOMER_ID, 
	CHEX_SYSTEMS_BIZ_CHEX_FI_ID, 
	FINCEN_LOCATION_CODE, RSSD_ID, 
	SALES_OPPORTUNITY_OPTION, 
	FIRST_ADDRESS_LINE, 
	PO_BOX, 
	ADDITIONAL_ADDRESS_LINE, 
	STREET, 
	CITY, 
	STATE, 
	POSTAL_CODE, 
	COUNTRY, 
	COUNTRY_CODE, 
	ADDRESS_FORMAT, 
	LATITUDE, 
	LONGITUDE, 
	NMLSR_ID, 
	NMLSR_STATE, 
	NMLSR_EFFECTIVE_DATE, 
	NMLSR_EXPIRATION_DATE,
	ROW_NUMBER() OVER (PARTITION BY SERIAL ORDER BY SERIAL) AS rn -- helps identify mutliple serial number dupes		
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG
	)

	SELECT SERIAL, SOURCEHASH2, LAST_FM_DATE, DESCRIPTION, STATUS, CODE, GL_ACCOUNT_BRANCH_SUFFIX, CK_HLD_ROUTING_SET_SERIAL, CK_HLD_BANK_DAY_CUTOFF_HOUR, 
	CK_HLD_BANK_DAY_CUTOFF_MINUTE, TIME_ZONE, PHONE_NUMBER, SHARED_BRANCH_CUSO, SHARED_BRANCH_LEAGUE, SHARED_BRANCH_INSTITUTION_ID, SHARED_BRANCH_PSEUDO_TERMINAL,
	CHEX_SYSTEMS_CUSTOMER_ID, CHEX_SYSTEMS_BIZ_CHEX_FI_ID, FINCEN_LOCATION_CODE, RSSD_ID, SALES_OPPORTUNITY_OPTION, FIRST_ADDRESS_LINE, PO_BOX, ADDITIONAL_ADDRESS_LINE, 
	STREET, CITY, STATE, POSTAL_CODE, COUNTRY, COUNTRY_CODE, ADDRESS_FORMAT, LATITUDE, LONGITUDE, NMLSR_ID, NMLSR_STATE, NMLSR_EFFECTIVE_DATE, NMLSR_EXPIRATION_DATE
	FROM CTE
	WHERE rn = 1;

-- DUPE CHECK / DELETE 
	DELETE FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF USING (
    	WITH CTE_DUP AS
    	(
    	SELECT SERIAL,
	 	ROW_NUMBER () OVER ( PARTITION BY SERIAL ORDER BY SERIAL) AS RN
	 	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF
    	)
        SELECT SERIAL, RN FROM CTE_DUP
        ) AS CTE_RESULT
	WHERE CTE_RESULT.RN > 1;

	-- ADD PRIMARY KEY BACK

	ALTER TABLE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF ADD PRIMARY KEY (SERIAL);

	-- Expiration for records not coming back into resultset
	UPDATE RRCU_DW_DEV.DW.T_KS_BRANCH_DW_CF
	SET BRCH_CURR_IND = 0
	, BRCH_EXP_DT = CURRENT_DATE
	WHERE BRCH_CURR_IND = 1
	AND BRCH_SERIAL NOT IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF);

	DROP TABLE IF EXISTS RRCU_STG_DEV.KEYSTONE_CORE.Update_STG;

	CREATE TEMPORARY TABLE RRCU_STG_DEV.KEYSTONE_CORE.Update_STG(
	BRCH_REC_KEY BIGINT,
	STG_SOURCEHASH2 VARCHAR(32),
	NEW_SOURCEHASH2 VARCHAR(32),
	IS_TYPE2 INT,  -- REPRESENTS TYPE 2
	IS_NEW INT -- INDICATION FOR NEW RECORD TYPE 2
	);


	INSERT INTO RRCU_STG_DEV.KEYSTONE_CORE.Update_STG (
	BRCH_REC_KEY,
	STG_SOURCEHASH2,
	NEW_SOURCEHASH2,
	IS_NEW,
	IS_TYPE2	
	)
	
	WITH CTE_COMPARE AS
	(
	SELECT dim.BRCH_REC_KEY ,  dim.BRCH_SOURCEHASH2, stg.sourcehash2,
	CASE WHEN dim.BRCH_REC_KEY IS NULL THEN 1 ELSE 0 END CASE,
	CASE WHEN dim.BRCH_REC_KEY IS NOT NULL AND stg.SOURCEHASH2 <> dim.BRCH_SOURCEHASH2 THEN 1 ELSE 0 END CASE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF stg
	LEFT OUTER JOIN RRCU_DW_DEV.DW.T_KS_BRANCH_DW_CF dim ON dim.BRCH_SERIAL = stg.SERIAL AND dim.BRCH_CURR_IND  = 1
	)
	SELECT *
	FROM CTE_COMPARE;
	
	UPDATE RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF a
	SET BRCH_REC_KEY = b.BRCH_REC_KEY,
	ISNEW = b.IS_NEW,
	ISTYPE2 = b.IS_TYPE2
	FROM (SELECT BRCH_REC_KEY, IS_NEW, IS_TYPE2, NEW_SOURCEHASH2 FROM RRCU_STG_DEV.KEYSTONE_CORE.Update_STG) b
	WHERE a.SOURCEHASH2 = b.NEW_SOURCEHASH2 AND a.BRCH_REC_KEY IS NULL;

	-- Expiration for records type 2
	
   UPDATE RRCU_DW_DEV.DW.T_KS_BRANCH_DW_CF
	SET BRCH_CURR_IND = 0
	, BRCH_EXP_DT = CURRENT_DATE
	WHERE BRCH_CURR_IND = 1
	AND BRCH_SERIAL IN (SELECT SERIAL FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF WHERE ISTYPE2 = 1); 


	INSERT INTO RRCU_DW_DEV.DW.T_KS_BRANCH_DW_CF
	(
	BRCH_SERIAL,
	BRCH_CURR_IND, 
	BRCH_EFF_DT, 
	BRCH_EXP_DT, 
	--BRCH_MOD_DT, 
	BRCH_SOURCEHASH2, 
	BRCH_LAST_FM_DATE, 
	BRCH_DESCRIPTION, 
	BRCH_STATUS, 
	BRCH_CODE, 
	BRCH_GL_ACCOUNT_BRANCH_SUFFIX, 
	BRCH_CK_HLD_ROUTING_SET_SERIAL,
	BRCH_CK_HLD_BANK_DAY_CUTOFF_HOUR, 
	BRCH_CK_HLD_BANK_DAY_CUTOFF_MINUTE, 
	BRCH_TIME_ZONE, BRCH_PHONE_NUMBER, 
	BRCH_SHARED_BRANCH_CUSO, 
	BRCH_SHARED_BRANCH_LEAGUE, 
	BRCH_SHARED_BRANCH_INSTITUTION_ID, 
	BRCH_SHARED_BRANCH_PSEUDO_TERMINAL, 
	BRCH_CHEX_SYSTEMS_CUSTOMER_ID, 
	BRCH_CHEX_SYSTEMS_BIZ_CHEX_FI_ID, 
	BRCH_FINCEN_LOCATION_CODE, 
	BRCH_RSSD_ID, 
	BRCH_SALES_OPPORTUNITY_OPTION, 
	BRCH_FIRST_ADDRESS_LINE, 
	BRCH_PO_BOX, 
	BRCH_ADDITIONAL_ADDRESS_LINE, 
	BRCH_STREET, 
	BRCH_CITY, 
	BRCH_STATE, 
	BRCH_POSTAL_CODE, 
	BRCH_COUNTRY, 
	BRCH_COUNTRY_CODE, 
	BRCH_ADDRESS_FORMAT, 
	BRCH_LATITUDE, 
	BRCH_LONGITUDE, 
	BRCH_NMLSR_ID, 
	BRCH_NMLSR_STATE, 
	BRCH_NMLSR_EFFECTIVE_DATE, 
	BRCH_NMLSR_EXPIRATION_DATE, 
	DW_LOAD_DT	
	)

	SELECT 
	stg.SERIAL,
	1,
	CURRENT_DATE,
	NULL,
	stg.SOURCEHASH2,
	stg.LAST_FM_DATE, 
	stg.DESCRIPTION, 
	stg.STATUS, 
	stg.CODE, 
	stg.GL_ACCOUNT_BRANCH_SUFFIX, 
	stg.CK_HLD_ROUTING_SET_SERIAL, 
	stg.CK_HLD_BANK_DAY_CUTOFF_HOUR, 
	stg.CK_HLD_BANK_DAY_CUTOFF_MINUTE, 
	stg.TIME_ZONE, 
	stg.PHONE_NUMBER, 
	stg.SHARED_BRANCH_CUSO, 
	stg.SHARED_BRANCH_LEAGUE, 
	stg.SHARED_BRANCH_INSTITUTION_ID, 
	stg.SHARED_BRANCH_PSEUDO_TERMINAL, 
	stg.CHEX_SYSTEMS_CUSTOMER_ID, 
	stg.CHEX_SYSTEMS_BIZ_CHEX_FI_ID, 
	stg.FINCEN_LOCATION_CODE, RSSD_ID, 
	stg.SALES_OPPORTUNITY_OPTION, 
	stg.FIRST_ADDRESS_LINE, 
	stg.PO_BOX, 
	stg.ADDITIONAL_ADDRESS_LINE, 
	stg.STREET, 
	stg.CITY, 
	stg.STATE, 
	stg.POSTAL_CODE, 
	stg.COUNTRY, 
	stg.COUNTRY_CODE, 
	stg.ADDRESS_FORMAT, 
	stg.LATITUDE, 
	stg.LONGITUDE, 
	stg.NMLSR_ID, 
	stg.NMLSR_STATE, 
	stg.NMLSR_EFFECTIVE_DATE, 
	stg.NMLSR_EXPIRATION_DATE,
	CURRENT_DATE
	FROM RRCU_STG_DEV.KEYSTONE_CORE.T_KS_BRANCH_STG_CF stg
		WHERE ISNEW = 1 OR ISTYPE2 = 1;
	
	UPDATE RRCU_DW_DEV.DW.T_KS_BRANCH_DW_CF
	SET BRCH_CURR_IND = 0
	, BRCH_EXP_DT = CURRENT_DATE
	WHERE BRCH_STATUS  = 'C';


END;
$$
;